version: "3.8"

services:
  web:
    build: ./api
    command: ["daphne","hackerandAPI.asgi:application","-b","0.0.0.0","-p","${DJANGO_PORT}"]
    volumes:
      - static_volume:/home/app/web/static # <-- bind the static volume
      - media_volume:/home/app/web/media # <-- bind the media volume
    env_file:
      - config/django/.env.prod
    expose:
      - ${DJANGO_PORT}
    networks:
      - traefik_network
      - database_network
    depends_on:
      - db
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.web.rule=Host(`${DOMAIN}`)"
      - "traefik.http.routers.web.entrypoints=websecure"
      - "traefik.http.routers.web.tls.certresolver=myresolver"
      - "traefik.docker.network=${COMPOSE_PROJECT_NAME}_traefik_network"
  nginx:
    image: nginx:latest
    networks:
      - traefik_network
    expose:
      - 80
    volumes:
      - ./config/nginx/conf.d:/etc/nginx/conf.d
      - static_volume:/home/app/web/static # <-- bind the static volume
      - media_volume:/home/app/web/media # <-- bind the media volume
    depends_on:
      - web
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.nginx.rule=Host(`${DOMAIN}`) && PathPrefix(`/static`)"
      - "traefik.http.routers.nginx.entrypoints=websecure"
      - "traefik.http.routers.nginx.tls.certresolver=myresolver"
      - "traefik.docker.network=${COMPOSE_PROJECT_NAME}_traefik_network"
 
  traefik:
    image: "traefik:v2.4"
    container_name: "traefik"
    command:
      - "--api.insecure=true"
      - "--providers.docker=true"
      - "--providers.docker.exposedbydefault=false"
      - "--providers.docker.network=${COMPOSE_PROJECT_NAME}_traefik_network"
      - "--providers.docker.watch=true"
      - "--entrypoints.websecure.address=:443"
      - "--certificatesresolvers.myresolver.acme.tlschallenge=true"
      - "--certificatesresolvers.myresolver.acme.email=${ADMIN_EMAIL}"
      - "--certificatesresolvers.myresolver.acme.storage=/letsencrypt/acme.json"
    ports:
      - "443:443"
    networks:
      - traefik_network
    volumes:
      - letsencrypt:/letsencrypt
      - "/var/run/docker.sock:/var/run/docker.sock:ro"
    depends_on:
      - web
      - nginx
  db:
    image: postgres:latest
    env_file:
      - config/db/.env.prod
    networks:
      - database_network
    volumes:
      - database_volume:/var/lib/postgresql/data

networks:
  traefik_network:
    driver: bridge
  database_network: 
    driver: bridge

volumes:
  database_volume: # Database Persistance Volume
  static_volume: # Static Django Files
  media_volume: # Media Uploaded Files
  letsencrypt: # HTTPS Certs
